"""
이것이 취업을 위한 코딩 테스트다 with  파이썬
DFS 예제 문제 : 음료수 얼려먹기

[[문제]]
N X M 크기의 얼음 틀이 있습니다. 구멍이 뚫려 있는 부분은 0, 칸막이가 존재하는 부분은 1로 표시됩 니다. 구멍이 뚫려 있는 부분끼리 상, 하, 좌, 우로 붙어 있는 경우 서로 연결되어 있는 것으로 간주합니다.
이때 얼음 틀의 모양이 주어졌을 때 생성되는 총 아이스크림의 개수를 구하는 프로그램을 작성하세요.

[입력 조건]
1. 첫 번째 줄에 얼음 틀의 세로 길이 N과 가로 길이 M이 주어집니다. (1 <= N, M <= 1,000)
2. 두 번째 줄부터 N + 1 번째 줄까지 얼음 틀의 형태가 주어집니다.
3. 이때 구멍이 뚫려있는 부분은 0, 그렇지 않은 부분은 1 입니다.

[출력 조건]
한 번에 만들 수 있는 아이스크림의 개수를 출력합니다.

입력 예시
4 5
00110
00011
11111
00000

출력 예시 : 3

해결 아이디어
1. DFS or BFS로 풀이 -> "서로 연결되어 있는 요소들을 찾아야 하기 때문에 그래프 이용"
2. 특정 지점에서 상하좌우를 살펴보고 구멍이 뚫려 있는 부분 (값이 0인 부분), 아직 방문하지 않는 지점을 방문한다.
3. 다시 방문한 지점에서 똑같이 상하좌우를 살펴보고 방문을 진행하는 과정을 반복
4. 
"""


def dfs(x, y):
    if x <= -1 or x >= N or y <= -1 or y >= M:
        return False

    if graph[x][y] == 0:
        graph[x][y] = 1
        dfs(x - 1, y)
        dfs(x, y - 1)
        dfs(x + 1, y)
        dfs(x, y + 1)

        return True

    return False


N, M = map(int, input("입력").split())

result = 0
graph = []

for i in range(4):
    graph.append(list(map(int, input())))

for i in range(N):
    for j in range(M):
        if dfs(i, j) == True:
            result += 1

print(result)
